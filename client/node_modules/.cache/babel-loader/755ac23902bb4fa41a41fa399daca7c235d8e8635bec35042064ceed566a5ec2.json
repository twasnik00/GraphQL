{"ast":null,"code":"var _jsxFileName = \"/Users/tushar/Documents/GitHub/GraphQL-main/client/src/pages/ShowPage.js\",\n  _s = $RefreshSig$();\n// src/pages/ShowPage.js\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { GET_PERSON, GET_CARS_BY_PERSON_ID } from '../graphql/queries';\nimport PersonCard from '../components/PersonCard';\nimport CarCard from '../components/CarCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const {\n    loading: personLoading,\n    error: personError,\n    data: personData\n  } = useQuery(GET_PERSON, {\n    variables: {\n      id\n    }\n  });\n  const {\n    loading: carsLoading,\n    error: carsError,\n    data: carsData\n  } = useQuery(GET_CARS_BY_PERSON_ID, {\n    variables: {\n      personId: id\n    }\n  });\n  if (personLoading || carsLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 44\n  }, this);\n  if (personError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", personError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 27\n  }, this);\n  if (carsError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", carsError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PersonCard, {\n      person: personData.getPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push('/'),\n      children: \"Go back home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowPage, \"UbQaXenfbZwaCaHE9nhpcCveO64=\", false, function () {\n  return [useParams, useHistory, useQuery, useQuery];\n});\n_c = ShowPage;\nexport default ShowPage;\nvar _c;\n$RefreshReg$(_c, \"ShowPage\");","map":{"version":3,"names":["React","useQuery","useParams","useHistory","GET_PERSON","GET_CARS_BY_PERSON_ID","PersonCard","CarCard","jsxDEV","_jsxDEV","ShowPage","_s","id","history","loading","personLoading","error","personError","data","personData","variables","carsLoading","carsError","carsData","personId","children","fileName","_jsxFileName","lineNumber","columnNumber","message","person","getPerson","onClick","push","_c","$RefreshReg$"],"sources":["/Users/tushar/Documents/GitHub/GraphQL-main/client/src/pages/ShowPage.js"],"sourcesContent":["// src/pages/ShowPage.js\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useParams, useHistory } from 'react-router-dom';  \nimport { GET_PERSON, GET_CARS_BY_PERSON_ID } from '../graphql/queries';\nimport PersonCard from '../components/PersonCard';\nimport CarCard from '../components/CarCard';\n\nconst ShowPage = () => {\n  const { id } = useParams();\n  const history = useHistory();  \n  const { loading: personLoading, error: personError, data: personData } = useQuery(GET_PERSON, {\n    variables: { id },\n  });\n  \n  const { loading: carsLoading, error: carsError, data: carsData } = useQuery(GET_CARS_BY_PERSON_ID, {\n    variables: { personId: id },\n  });\n\n  if (personLoading || carsLoading) return <p>Loading...</p>;\n  if (personError) return <p>Error: {personError.message}</p>;\n  if (carsError) return <p>Error: {carsError.message}</p>;\n\n  return (\n    <div>\n      <PersonCard person={personData.getPerson} />\n\n      <button onClick={() => history.push('/')}>Go back home</button> \n    </div>\n  );\n};\n\nexport default ShowPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,SAASC,UAAU,EAAEC,qBAAqB,QAAQ,oBAAoB;AACtE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,OAAO,GAAGV,UAAU,CAAC,CAAC;EAC5B,MAAM;IAAEW,OAAO,EAAEC,aAAa;IAAEC,KAAK,EAAEC,WAAW;IAAEC,IAAI,EAAEC;EAAW,CAAC,GAAGlB,QAAQ,CAACG,UAAU,EAAE;IAC5FgB,SAAS,EAAE;MAAER;IAAG;EAClB,CAAC,CAAC;EAEF,MAAM;IAAEE,OAAO,EAAEO,WAAW;IAAEL,KAAK,EAAEM,SAAS;IAAEJ,IAAI,EAAEK;EAAS,CAAC,GAAGtB,QAAQ,CAACI,qBAAqB,EAAE;IACjGe,SAAS,EAAE;MAAEI,QAAQ,EAAEZ;IAAG;EAC5B,CAAC,CAAC;EAEF,IAAIG,aAAa,IAAIM,WAAW,EAAE,oBAAOZ,OAAA;IAAAgB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC1D,IAAIZ,WAAW,EAAE,oBAAOR,OAAA;IAAAgB,QAAA,GAAG,SAAO,EAACR,WAAW,CAACa,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC3D,IAAIP,SAAS,EAAE,oBAAOb,OAAA;IAAAgB,QAAA,GAAG,SAAO,EAACH,SAAS,CAACQ,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEvD,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACH,UAAU;MAACyB,MAAM,EAAEZ,UAAU,CAACa;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5CpB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMpB,OAAO,CAACqB,IAAI,CAAC,GAAG,CAAE;MAAAT,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtBID,QAAQ;EAAA,QACGR,SAAS,EACRC,UAAU,EAC+CF,QAAQ,EAIdA,QAAQ;AAAA;AAAAkC,EAAA,GAPvEzB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}